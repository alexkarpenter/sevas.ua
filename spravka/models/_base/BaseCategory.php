<?php

/**
 * This is the model base class for the table "category".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Category".
 *
 * Columns in table "category" available as properties of the model,
 * followed by relations of table "category" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idcatparent
 * @property string $name
 * @property string $descr
 * @property string $path
 * @property string $pathfull
 * @property integer $level
 * @property integer $weight
 * @property string $img
 * @property string $options
 * @property string $root
 * @property string $lft
 * @property string $rgt
 * @property string $created_at
 * @property string $updated_at
 *
 */
abstract class BaseCategory extends CActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'category';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Category|Categories', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, path', 'required'),
			array('idcatparent, weight', 'numerical', 'integerOnly'=>true),
			array('name, descr, path, pathfull, img, options', 'safe'),
			array('name, descr, path, pathfull, weight, img, options', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, descr, path, pathfull, level, weight, img, options, root, lft, rgt', 'safe', 'on'=>'search'),
			array('parent', 'safe'),
		);
	}

	public function relations() {
		return array(
			'organizations' => array(self::MANY_MANY, 'Organization', 'org_category(idcat, idorg)'),
			'organizationCount' => array(self::STAT, 'Organization', 'org_category(idcat, idorg)', 'condition' => 't.checked=1' ),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Название'),
			'descr' => Yii::t('app', 'Описание'),
			'path' => Yii::t('app', 'Путь'),
			'pathfull' => Yii::t('app', 'Путь полный'),
			'level' => Yii::t('app', 'Уровень'),
			'weight' => Yii::t('app', 'Вес'),
			'img' => Yii::t('app', 'Изображение'),
			'imgFile' => Yii::t('app', 'Изображение'),
			'options' => Yii::t('app', 'Опции'),
			'root' => Yii::t('app', 'Root'),
			'lft' => Yii::t('app', 'Lft'),
			'rgt' => Yii::t('app', 'Rgt'),
			'parent' => Yii::t('app', 'Родительская категория'),
			'created_at' => 'Создана',
			'updated_at' => 'Изменена',
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('t.id', $this->id);
		$criteria->compare('t.name', $this->name, true);
		$criteria->compare('t.descr', $this->descr, true);
		$criteria->compare('t.path', $this->path, true);
		$criteria->compare('t.pathfull', $this->pathfull, true);
		$criteria->compare('t.level', $this->level);
		$criteria->compare('t.weight', $this->weight);
		$criteria->compare('t.img', $this->img, true);
		$criteria->compare('t.options', $this->options, true);
		$criteria->compare('t.root', $this->root, true);
		$criteria->compare('t.lft', $this->lft, true);
		$criteria->compare('t.rgt', $this->rgt, true);
		
		$criteria->join = 'INNER JOIN category cr ON t.root=cr.id';
		$criteria->order = 'cr.weight,cr.name,lft';

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'pagination'=>array(
					'pageSize'=>40,
			),				
		));
	}
}