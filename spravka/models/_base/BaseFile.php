<?php

/**
 * This is the model base class for the table "file".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "File".
 *
 * Columns in table "file" available as properties of the model,
 * followed by relations of table "file" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $title
 * @property string $descr
 * @property string $path
 * @property string $type
 * @property integer $size
 *
 * @property OrgFiles[] $orgFiles
 * @property Organization[] $organizations
 * @property Comment[] $comments
 * @property integer $commentsCount
 */
abstract class BaseFile extends CActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'file';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'File|Files', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, path, type, size', 'required'),
			array('size', 'numerical', 'integerOnly'=>true),
			array('name, path', 'length', 'max'=>128),
			array('title', 'length', 'max'=>256),
			array('descr', 'length', 'max'=>1024),
			array('type', 'length', 'max'=>45),
			array('title, descr', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, title, descr, path, type, size', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'orgFiles' => array(self::HAS_MANY, 'OrgFiles', 'file_id'),
			'organizations' => array(self::HAS_MANY, 'Organization', 'image_id'),
			'comments' => array(self::MANY_MANY, 'Comment', 'file_comment(file_id, comment_id)'),
			'commentsCount' => array(self::STAT, 'Comment', 'file_comment(file_id, comment_id)'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'title' => Yii::t('app', 'Title'),
			'descr' => Yii::t('app', 'Descr'),
			'path' => Yii::t('app', 'Path'),
			'type' => Yii::t('app', 'Type'),
			'size' => Yii::t('app', 'Size'),
			'orgFiles' => null,
			'organizations' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('descr', $this->descr, true);
		$criteria->compare('path', $this->path, true);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('size', $this->size);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}